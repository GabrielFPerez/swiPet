{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css';\nimport { ReactComponent as LoginCat } from '../icons/login-cat.svg';\nfunction Login() {\n  _s();\n  const [loginName, setLoginName] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const doLogin = async event => {\n    event.preventDefault();\n    var obj = {\n      login: loginName,\n      password: loginPassword\n    };\n    var js = JSON.stringify(obj);\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        body: js,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const contentType = response.headers.get(\"content-type\");\n      if (!contentType || !contentType.includes(\"application/json\")) {\n        throw new TypeError(\"Oops, we haven't got JSON!\");\n      }\n      const res = await response.json();\n      if (res.id) {\n        var user = {\n          firstName: res.firstName,\n          lastName: res.lastName,\n          id: res.id\n        };\n        localStorage.setItem('user_data', JSON.stringify(user));\n        setMessage('');\n        window.location.href = '/profile';\n      } else {\n        setMessage(res.message || 'Login failed');\n      }\n    } catch (e) {\n      console.error('Login error:', e);\n      if (e instanceof TypeError) {\n        setMessage('Received non-JSON response from server');\n      } else {\n        setMessage('An error occurred: ' + e.message);\n      }\n    }\n  };\n\n  // ... rest of the component remains the same ...\n}\n_s(Login, \"1EwSQ2e7bvpArB/hGxYRv9tzKv4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","ReactComponent","LoginCat","Login","_s","loginName","setLoginName","loginPassword","setLoginPassword","message","setMessage","doLogin","event","preventDefault","obj","login","password","js","JSON","stringify","response","fetch","method","body","headers","ok","Error","status","contentType","get","includes","TypeError","res","json","id","user","firstName","lastName","localStorage","setItem","window","location","href","e","console","error","_c","$RefreshReg$"],"sources":["/Users/lukesandoval/Library/CloudStorage/OneDrive-UniversityofCentralFlorida/UCF_Summer24/POOSD/swiPet/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/Login.css'\nimport { ReactComponent as LoginCat } from '../icons/login-cat.svg'\n\nfunction Login() {\n    const [loginName, setLoginName] = useState('');\n    const [loginPassword, setLoginPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const doLogin = async (event) => {\n        event.preventDefault();\n\n        var obj = { login: loginName, password: loginPassword };\n        var js = JSON.stringify(obj);\n\n        try {\n            const response = await fetch('/api/login', {\n                method: 'POST',\n                body: js,\n                headers: { 'Content-Type': 'application/json' }\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n\n            const contentType = response.headers.get(\"content-type\");\n            if (!contentType || !contentType.includes(\"application/json\")) {\n                throw new TypeError(\"Oops, we haven't got JSON!\");\n            }\n\n            const res = await response.json();\n\n            if (res.id) {\n                var user = { firstName: res.firstName, lastName: res.lastName, id: res.id };\n                localStorage.setItem('user_data', JSON.stringify(user));\n                setMessage('');\n                window.location.href = '/profile';\n            } else {\n                setMessage(res.message || 'Login failed');\n            }\n        } catch (e) {\n            console.error('Login error:', e);\n            if (e instanceof TypeError) {\n                setMessage('Received non-JSON response from server');\n            } else {\n                setMessage('An error occurred: ' + e.message);\n            }\n        }\n    };\n\n    // ... rest of the component remains the same ...\n}\n\nexport default Login;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,qBAAqB;AAC5B,SAASC,cAAc,IAAIC,QAAQ,QAAQ,wBAAwB;AAEnE,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,OAAO,GAAG,MAAOC,KAAK,IAAK;IAC7BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAIC,GAAG,GAAG;MAAEC,KAAK,EAAEV,SAAS;MAAEW,QAAQ,EAAET;IAAc,CAAC;IACvD,IAAIU,EAAE,GAAGC,IAAI,CAACC,SAAS,CAACL,GAAG,CAAC;IAE5B,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN,EAAE;QACRO,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB;MAClD,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;MAC7D;MAEA,MAAMC,WAAW,GAAGR,QAAQ,CAACI,OAAO,CAACK,GAAG,CAAC,cAAc,CAAC;MACxD,IAAI,CAACD,WAAW,IAAI,CAACA,WAAW,CAACE,QAAQ,CAAC,kBAAkB,CAAC,EAAE;QAC3D,MAAM,IAAIC,SAAS,CAAC,4BAA4B,CAAC;MACrD;MAEA,MAAMC,GAAG,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAEjC,IAAID,GAAG,CAACE,EAAE,EAAE;QACR,IAAIC,IAAI,GAAG;UAAEC,SAAS,EAAEJ,GAAG,CAACI,SAAS;UAAEC,QAAQ,EAAEL,GAAG,CAACK,QAAQ;UAAEH,EAAE,EAAEF,GAAG,CAACE;QAAG,CAAC;QAC3EI,YAAY,CAACC,OAAO,CAAC,WAAW,EAAErB,IAAI,CAACC,SAAS,CAACgB,IAAI,CAAC,CAAC;QACvDzB,UAAU,CAAC,EAAE,CAAC;QACd8B,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,UAAU;MACrC,CAAC,MAAM;QACHhC,UAAU,CAACsB,GAAG,CAACvB,OAAO,IAAI,cAAc,CAAC;MAC7C;IACJ,CAAC,CAAC,OAAOkC,CAAC,EAAE;MACRC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,CAAC,CAAC;MAChC,IAAIA,CAAC,YAAYZ,SAAS,EAAE;QACxBrB,UAAU,CAAC,wCAAwC,CAAC;MACxD,CAAC,MAAM;QACHA,UAAU,CAAC,qBAAqB,GAAGiC,CAAC,CAAClC,OAAO,CAAC;MACjD;IACJ;EACJ,CAAC;;EAED;AACJ;AAACL,EAAA,CAhDQD,KAAK;AAAA2C,EAAA,GAAL3C,KAAK;AAkDd,eAAeA,KAAK;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}